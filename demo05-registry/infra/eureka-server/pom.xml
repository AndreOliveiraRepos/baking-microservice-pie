<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.bakingpie</groupId>
        <artifactId>infra</artifactId>
        <version>05</version>
    </parent>

    <artifactId>eureka-server</artifactId>
    <packaging>war</packaging>
    <name>Baking a Microservice Pie :: Demo 05 Registry :: Infrastructure :: Eureka-Server</name>

    <dependencies>
        <dependency>
            <groupId>com.netflix.eureka</groupId>
            <artifactId>eureka-client</artifactId>
            <version>1.8.4</version>
        </dependency>
        <dependency>
            <groupId>com.netflix.eureka</groupId>
            <artifactId>eureka-core</artifactId>
            <version>1.8.4</version>
        </dependency>

        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <version>2.4.0</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>1.19.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>1.19.1</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.12</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.2</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.9</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.3.7</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>eureka</finalName>
    <plugins>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${version.docker-fabric8.plugin}</version>
        <configuration>
          <verbose>true</verbose>
          <skip>false</skip>
          <registry>docker-registry:5000</registry>
          <pullRegistry>docker.io</pullRegistry>
          <images>
            <image>
              <name>baking/${project.build.finalName}:rpi</name>
              <alias>rpi</alias>
              <build>
                <from>dordoka/rpi-tomcat</from>
                <ports>
                  <port>8080</port>
                </ports>
                <assembly>
                  <name>usr/local/tomcat/webapps</name>
                  <inline>
                    <fileSets>
                      <fileSet>
                        <directory>${project.basedir}/build/libs</directory>
                        <outputDirectory>/</outputDirectory>
                        <includes>
                          <include>*.war</include>
                        </includes>
                      </fileSet>
                    </fileSets>
                  </inline>
                </assembly>
                <cmd>["catalina.sh", "run"]</cmd>
              </build>
              <run>
                <skip>true</skip>
              </run>
            </image>
            <image>
              <name>baking/${project.build.finalName}:default</name>
              <build>
                <from>tomcat:8.5.23-jre8</from>
                <ports>
                  <port>8080</port>
                </ports>
                <assembly>
                  <name>usr/local/tomcat/webapps</name>
                  <inline>
                    <fileSets>
                      <fileSet>
                        <directory>${project.basedir}/build/libs</directory>
                        <outputDirectory>/</outputDirectory>
                        <includes>
                          <include>*.war</include>
                        </includes>
                      </fileSet>
                    </fileSets>
                  </inline>
                </assembly>
                <cmd>["catalina.sh", "run"]</cmd>
              </build>
              <run>
                <ports>
                  <port>8761:8080</port>
                </ports>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
